#scope_private
pointers :: fn () #test {
	i       := 666;
	ptr     := &i;
	ptr_ptr := &ptr;

	j := @@ptr_ptr;
	assert(j == 666);

	j = @ptr;
	assert(j == 666);
};


null_pointers :: fn () #test {
	test_ptr :: fn (ptr: *s32) *s32 {
		return null;
	};

	foo : *s32 = null;
	assert(foo == null);
	assert(null == null);
	assert(test_ptr(null) == null);
};

passed_pointer :: fn () #test {
	value :: 10;
	i := 0;

	fn (ptr: *s32, v: s32) {
		@ptr = v;
	} (&i, value);

	assert(i == value);
};
