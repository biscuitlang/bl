#load "scope1.bl"
#load "scope2.bl"

#private
scope1_variable :: fn () #test {
	Scope1.variable = 0;
}

scope1_function :: fn () #test {
	Scope1.function();
}

scope1_type :: fn () #test {
	v: Scope1.MyType;
	T :: typeinfo(Scope1.MyType);
	test_true(T.kind == TypeKind.STRUCT);
}

scope2_variable :: fn () #test {
	Scope2.variable = 0;
}

scope2_function :: fn () #test {
	Scope2.function();
}

scope2_type :: fn () #test {
	v: Scope2.MyType;
	T :: typeinfo(Scope2.MyType);
	test_true(T.kind == TypeKind.STRUCT);
}

scoped_type :: fn () #test {
	T1 :: typeinfo(Scope1.MyType);
	T2 :: typeinfo(Scope2.MyType);
	test_true(T1 != T2);
}