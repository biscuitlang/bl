
/*
FileNotFoundError :: struct {
	filepath: string_view;
}

AccessDeniedError :: struct {}

FileError :: union { // Tagged one
	FileNotFoundError;
	AccessDeniedError;
}

open_file :: fn (filepath: string_view) (handle: s32, err: !FileError) {
	if exist(filepath) {
		return 1, .{};
	}

	return 0, FileNotFoundError.{ filepath = tprint(filepath) };
}

#import "W:/bl/tests/dummy_module";
// #import "std/print"
*/

main :: fn () s32 {
	n :: 18446744073709551615.0;
	// c :: '\x1FF'; b = 0;

	return 0;
}

// foo :: fn (s: s32) {
// }
