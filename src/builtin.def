#ifdef GEN_BUILTIN_NAMES
    BUILTIN_ID_TYPE_TYPE,
    BUILTIN_ID_TYPE_PLACEHOLDER,
    BUILTIN_ID_TYPE_NAMED_SCOPE,
    BUILTIN_ID_TYPE_S8,
    BUILTIN_ID_TYPE_S16,
    BUILTIN_ID_TYPE_S32,
    BUILTIN_ID_TYPE_S64,
    BUILTIN_ID_TYPE_U8,
    BUILTIN_ID_TYPE_U16,
    BUILTIN_ID_TYPE_U32,
    BUILTIN_ID_TYPE_U64,
    BUILTIN_ID_TYPE_USIZE,
    BUILTIN_ID_TYPE_BOOL,
    BUILTIN_ID_TYPE_F32,
    BUILTIN_ID_TYPE_F64,
    BUILTIN_ID_TYPE_VOID,
    BUILTIN_ID_TYPE_STRING,
    BUILTIN_ID_NULL,
    BUILTIN_ID_MAIN,
    BUILTIN_ID_ARR_LEN,
    BUILTIN_ID_ARR_PTR,
    BUILTIN_ID_ARR_ALLOCATED_ELEMS,
    BUILTIN_ID_ARR_ALLOCATOR,
    BUILTIN_ID_STRUCT_BASE,
    BUILTIN_ID_ANY,
    BUILTIN_ID_TYPE_KIND,
    BUILTIN_ID_TYPE_INFO,
    BUILTIN_ID_TYPE_INFO_TYPE,
    BUILTIN_ID_TYPE_INFO_VOID,
    BUILTIN_ID_TYPE_INFO_INT,
    BUILTIN_ID_TYPE_INFO_REAL,
    BUILTIN_ID_TYPE_INFO_FN,
    BUILTIN_ID_TYPE_INFO_PTR,
    BUILTIN_ID_TYPE_INFO_BOOL,
    BUILTIN_ID_TYPE_INFO_ARRAY,
    BUILTIN_ID_TYPE_INFO_STRUCT,
    BUILTIN_ID_TYPE_INFO_ENUM,
    BUILTIN_ID_TYPE_INFO_NULL,
    BUILTIN_ID_TYPE_INFO_STRING,
    BUILTIN_ID_TYPE_INFO_VARGS,
    BUILTIN_ID_TYPE_INFO_SLICE,
    BUILTIN_ID_TYPE_INFO_STRUCT_MEMBER,
    BUILTIN_ID_TYPE_INFO_ENUM_VARIANT,
    BUILTIN_ID_TYPE_INFO_FN_ARG,
    BUILTIN_ID_TYPE_INFO_FN_GROUP,
    BUILTIN_ID_ABORT_FN,
    BUILTIN_ID_ASSERT_FN,
    BUILTIN_ID_IS_DEBUG,
    BUILTIN_ID_TYPE_TEST_CASES,
    BUILTIN_ID_TYPE_CALL_LOCATION,
    BUILTIN_ID_COMMAND_LINE_ARGUMENTS,
    BUILTIN_ID_IS_COMPTIME_RUN,
    BUILTIN_ID_ARCH_ENUM,
    BUILTIN_ID_ARCH,
    BUILTIN_ID_PLATFORM_ENUM,
    BUILTIN_ID_PLATFORM,
    BUILTIN_ID_ENV_ENUM,
    BUILTIN_ID_ENV,
    BUILTIN_ID_OS_DEBUG_BREAK_FN,
    BUILTIN_ID_BLC_VER_MAJOR,
    BUILTIN_ID_BLC_VER_MINOR,
    BUILTIN_ID_BLC_VER_PATCH,
    BUILTIN_ID_SIZEOF, /* first reserved */
    BUILTIN_ID_ALIGNOF,
    BUILTIN_ID_TYPEOF,
    BUILTIN_ID_TYPEINFO,
    BUILTIN_ID_COMPILER_ERROR,
    BUILTIN_ID_COMPILER_WARNING,
#endif

#ifdef GEN_BUILTIN_IDS
    {.str.ptr = "type"                  , .str.len = 4  },
    {.str.ptr = ".placeholer"           , .str.len = 11 },
    {.str.ptr = "scope"                 , .str.len = 5  },
    {.str.ptr = "s8"                    , .str.len = 2  },
    {.str.ptr = "s16"                   , .str.len = 3  },
    {.str.ptr = "s32"                   , .str.len = 3  },
    {.str.ptr = "s64"                   , .str.len = 3  },
    {.str.ptr = "u8"                    , .str.len = 2  },
    {.str.ptr = "u16"                   , .str.len = 3  },
    {.str.ptr = "u32"                   , .str.len = 3  },
    {.str.ptr = "u64"                   , .str.len = 3  },
    {.str.ptr = "usize"                 , .str.len = 5  },
    {.str.ptr = "bool"                  , .str.len = 4  },
    {.str.ptr = "f32"                   , .str.len = 3  },
    {.str.ptr = "f64"                   , .str.len = 3  },
    {.str.ptr = "void"                  , .str.len = 4  },
    {.str.ptr = "string"                , .str.len = 6  },
    {.str.ptr = "null_t"                , .str.len = 6  },
    {.str.ptr = "main"                  , .str.len = 4  },
    {.str.ptr = "len"                   , .str.len = 3  },
    {.str.ptr = "ptr"                   , .str.len = 3  },
    {.str.ptr = "allocated_elems"       , .str.len = 15 },
    {.str.ptr = "allocator"             , .str.len = 9  },
    {.str.ptr = "base"                  , .str.len = 4  },
    {.str.ptr = "Any"                   , .str.len = 3  },
    {.str.ptr = "TypeKind"              , .str.len = 8  },
    {.str.ptr = "TypeInfo"              , .str.len = 8  },
    {.str.ptr = "TypeInfoType"          , .str.len = 12 },
    {.str.ptr = "TypeInfoVoid"          , .str.len = 12 },
    {.str.ptr = "TypeInfoInt"           , .str.len = 11 },
    {.str.ptr = "TypeInfoReal"          , .str.len = 12 },
    {.str.ptr = "TypeInfoFn"            , .str.len = 10 },
    {.str.ptr = "TypeInfoPtr"           , .str.len = 11 },
    {.str.ptr = "TypeInfoBool"          , .str.len = 12 },
    {.str.ptr = "TypeInfoArray"         , .str.len = 13 },
    {.str.ptr = "TypeInfoStruct"        , .str.len = 14 },
    {.str.ptr = "TypeInfoEnum"          , .str.len = 12 },
    {.str.ptr = "TypeInfoNull"          , .str.len = 12 },
    {.str.ptr = "TypeInfoString"        , .str.len = 14 },
    {.str.ptr = "TypeInfoSlice"         , .str.len = 13 },
    {.str.ptr = "TypeInfoVArgs"         , .str.len = 13 },
    {.str.ptr = "TypeInfoStructMember"  , .str.len = 20 },
    {.str.ptr = "TypeInfoEnumVariant"   , .str.len = 19 },
    {.str.ptr = "TypeInfoFnArg"         , .str.len = 13 },
    {.str.ptr = "TypeInfoFnGroup"       , .str.len = 15 },
    {.str.ptr = "__os_abort"            , .str.len = 10 },
    {.str.ptr = "assert"                , .str.len = 6  },
    {.str.ptr = "IS_DEBUG"              , .str.len = 8  },
    {.str.ptr = "TestCase"              , .str.len = 8  },
    {.str.ptr = "CodeLocation"          , .str.len = 12 },
    {.str.ptr = "command_line_arguments", .str.len = 22 },
    {.str.ptr = "IS_COMPTIME_RUN"       , .str.len = 15 },
    {.str.ptr = "Arch"                  , .str.len = 4  },
    {.str.ptr = "ARCH"                  , .str.len = 4  },
    {.str.ptr = "Platform"              , .str.len = 8  },
    {.str.ptr = "PLATFORM"              , .str.len = 8  },
    {.str.ptr = "Env"                   , .str.len = 3  },
    {.str.ptr = "ENV"                   , .str.len = 3  },
    {.str.ptr = "__os_debug_break"      , .str.len = 16 },
    {.str.ptr = "BLC_VER_MAJOR"         , .str.len = 13 },
    {.str.ptr = "BLC_VER_MINOR"         , .str.len = 13 },
    {.str.ptr = "BLC_VER_PATCH"         , .str.len = 13 },
    {.str.ptr = "sizeof"                , .str.len = 6  },
    {.str.ptr = "alignof"               , .str.len = 7  },
    {.str.ptr = "typeof"                , .str.len = 6  },
    {.str.ptr = "typeinfo"              , .str.len = 8  },
    {.str.ptr = "compiler_error"        , .str.len = 14 },
    {.str.ptr = "compiler_warning"      , .str.len = 16 },
#endif
