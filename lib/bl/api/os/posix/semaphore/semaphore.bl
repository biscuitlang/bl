sem_t :: C.int;

SEM_VALUE_MAX :: 32767;
SEM_FAILED :: cast(*sem_t) 0xffffffffffffffff;

// @Note: Unnamed semaphores may not be supported on all platforms.

//sem_close :: fn (s: *sem_t) C.int #extern "sem_close";
//sem_open :: fn (name: *C.char, oflag: C.int, mode: C.mode_t, value: C.uint) *sem_t #extern "sem_open";
//sem_unlink :: fn (name: *C.char) C.int #extern "sem_unlink";
sem_init :: fn (s: *sem_t, shader: C.int, v: C.uint) C.int #extern "sem_init";
sem_destroy :: fn (s: *sem_t) C.int #extern "sem_destroy";
sem_post :: fn (s: *sem_t) C.int #extern "sem_post";
sem_trywait :: fn (s: *sem_t) C.int #extern "sem_trywait";
sem_wait :: fn (s: *sem_t) C.int #extern "sem_wait";

#scope_private
C :: #import "libc";

